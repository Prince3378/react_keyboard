{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","pressKey","event","setState","document","addEventListener","this","removeEventListener","className","length","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,MACT,MAAdE,EAAMF,KACR,EAAKG,SAAS,CAAEH,IAAK,WAhB3B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,YAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,YAV/C,oBAoBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACkB,IAAfR,EAAIS,OAED,mBAAGD,UAAU,YAAb,qCAMA,oBAAGA,UAAU,SAAb,qCAEE,qBAAKA,UAAU,MAAf,SACGR,aApCjB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.7b390ebe.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressKey);\n  }\n\n  pressKey = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n    if (event.key === ' ') {\n      this.setState({ key: 'Space' });\n    }\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        {key.length === 0\n          ? (\n            <p className=\"paragraph\">\n              Nothing was pressed yet\n            </p>\n          )\n\n          : (\n            <p className=\"ourKey\">\n              The last pressed key is:\n              <div className=\"key\">\n                {key}\n              </div>\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}