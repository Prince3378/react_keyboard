{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","tuch","key","n","pressKey","event","setState","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAQaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,EACNC,KAAK,EACLC,EAAG,iBAJP,EAeEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEL,MAAM,IACtB,EAAKK,SAAS,CAAEJ,KAAK,IACrB,EAAKI,SAAS,CAAEH,EAAGE,EAAMH,MACP,MAAdG,EAAMH,KACR,EAAKI,SAAS,CAAEH,EAAG,WApBzB,uDAWE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,YAZ5C,oBAwBE,WACE,MAAyBK,KAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,EAEnB,OACE,sBAAKO,UAAU,MAAf,UACE,mBAAGA,UAAU,YAAb,SACGT,GAAQ,4BAEX,oBAAGS,UAAU,SAAb,UACGR,GAAO,2BACR,qBAAKQ,UAAU,MAAf,SACGP,cAnCb,GAAyBQ,a,MCHzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.923ab5f5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  tuch: boolean,\n  key: boolean,\n  n: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    tuch: true,\n    key: false,\n    n: 'Press any key',\n  };\n\n  // componentWillMount() {\n  //   document.removeEventListener('keyup', this.pressKey);\n  // }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  pressKey = (event: KeyboardEvent) => {\n    this.setState({ tuch: false });\n    this.setState({ key: true });\n    this.setState({ n: event.key });\n    if (event.key === ' ') {\n      this.setState({ n: 'Space' });\n    }\n  };\n\n  render() {\n    const { tuch, key, n } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"paragraph\">\n          {tuch && 'Nothing was pressed yet'}\n        </p>\n        <p className=\"ourKey\">\n          {key && 'The last pressed key is:'}\n          <div className=\"key\">\n            {n}\n          </div>\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}